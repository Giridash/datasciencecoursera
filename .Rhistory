x<-"Hello World"
print(x)
l <- TRUE
i <-123L
l <- TRUE
i <- 123L
n <- 1234.56
c <- "ABC 123"
l
i
n
c
f = function(x) ( x + 1}
f(2)
f <- function(x) ( x + 1}
f <- function(x) {} x + 1}
f <- function(x) {x + 1}
f(2)
v <- c(1,2,3)
v
s <- 1:5
s
m <- matrix(data 1:6,nrow = 2, ncol = 3)
m
m <- matrix(data = 1:6, nrow = 2, ncol = 3)
m
a <- array(data = 1:8, dim = c(2,2,2))
a
l <- list(TRUE,45.56,FALSE,"ABC")
l
factors <- factor(c("Male","Female","Female","Female","male"))
levels(factors)
unclass(factors)
df <- data.frame(
Name = c("Cat","Dog","Cow"),
Age = c(5,10,3),
IsPet = c(TRUE, FALSE,TRUE))
df
df[1,2]
df[1,]
df[,2]
df["Age"]
df$Age
df[2:4,]
df[2:3,]
df[c(1,3),]
df[c(1,3),1]
df[df$IsPet = "TRUE"]
df[df$IsPet = "TRUE",]
df[df$IsPet == "TRUE",]
df[df$Age > 5,]
df[df$Name %in% c("Cat","Cow"),]
1 + 2
c(1,2,3)+c(2,3,5)
m <- matrix(data = 1:6, nrow = 2, ncol = 3)
n <- matrix(1:6,2,3)
m
n
m == n
identical(m,n)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
?nrow
x<-"Hello World"
print(x)
l <- TRUE
i <- 123L
n <- 1234.56
c <- "ABC 123"
l
i
n
c
# function creation and usage
f <- function(x) {x + 1}
f(2)
# vector creation
v <- c(1,2,3)
v
# shorter form of vector creation
s <- 1:5
s
# 2 x 2 matrix
m <- matrix(data = 1:6, nrow = 2, ncol = 3)
m
# 2x2x2 matrix
a <- array(data = 1:8, dim = c(2,2,2))
a
# different data types list
l <- list(TRUE,45.56,FALSE,"ABC")
l
# enumeration
factors <- factor(c("Male","Female","Female","Female","male"))
levels(factors)
unclass(factors)
# table with columns and rows
df <- data.frame(
Name = c("Cat","Dog","Cow"),
Age = c(5,10,3),
IsPet = c(TRUE, FALSE,TRUE))
df
df[1,2]
df[1,]
df[,2]
df["Age"]
df$Age
df[2:3,]
df[c(1,3),1]
df[df$IsPet == "TRUE",]
df[df$Age > 5,]
df[df$Name %in% c("Cat","Cow"),]
# Vectorized operations
1 + 2
c(1,2,3)+c(2,3,5)
# Named vs order/position of args
m <- matrix(data = 1:6, nrow = 2, ncol = 3)
n <- matrix(1:6,2,3)
m
n
m == n
identical(m,n)
#installing packages
install.packages("ggplot2")
library(ggplot2)
#viewing help
?nrow
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2
data("iris")
data(iris)
summary(iris)
head(iris)
sl  <- iris$Sepal.Length
hist(sl)
hist(
sl,
breaks = 10
)
hist(
sl,
breaks = 100
)
hist(
sl,
breaks = 1000
)
hist(
sl,
breaks = 50
)
bar(sl)
dotplot(sl)
density(sl)
plot(density(sl))
points(
x = sl,
y = rep(-0.0005,nrow(sl))
)
table(sl)
plot(table(sl))
plot(density(sl))
density(sl)
plot(table(sl))
pie(table(sl))
plot(
x = iris$Sepal.Length,
y = rep(0,nrow(iris)),
ylab ="",
yaxt ="n")
?plot
plot(
x = iris$Sepal.Length,
y = rep(0,nrow(iris)),
ylab ="",
yaxt ="n",
type="l")
?plot
plot(
x = iris$Sepal.Length,
y = rep(0,nrow(iris)),
ylab ="",
yaxt ="n",
type="b")
plot(
x = iris$Sepal.Length,
#  y = rep(0,nrow(iris)),
ylab ="",
yaxt ="n",
type="b")
plot(
x = iris$Sepal.Length,
y = rep(0,nrow(iris)),
ylab ="",
yaxt ="n",
type="b")
boxplot(
x = iris$Sepal.Length,
xlab = "Sepal Length",
horizontal = TRUE)
summary(iris$Sepal.Length)
install.packages("ggplot2")
library(ggplot2)
data(iris)
summary(iris)
spineplot(
x = iris$Sepal.Length,
y = iris$Species
)
spineplot(
x = iris$Species,
y = iris$Sepal.Length
)
mosaicplot(
x = iris$Sepal.Length,
y = iris$Species
)
mosaicplot(
x = iris$Species,
y = iris$Sepal.Length
)
plot(
x = iris$Species,
y = iris$Sepal.Length
)
plot(
x = iris$Sepal.Length,
y = iris$Species
)
plot(
x = table(iris$Sepal.Length),
type = "l"
)
table(iris$Sepal.Length)
plot(
x = table(iris$Species),
type = "l"
)
barplot(tapply(iris$Species,iris$Sepal.Length,mean))
barplot(tapply(iris$Sepal.Length,iris$Species,mean))
tapply(iris$Sepal.Length,iris$Species,mean)
barplot(
height = tapply(iris$Sepal.Length,iris$Species,mean),
las = 3)
mosaicplot(
x = iris$Species,
y = iris$Sepal.Length
)
spineplot(
x = iris$Sepal.Length,
y = iris$Species
)
plot(
x = iris$Sepal.Length,
y = iris$Species
)
plot(
y = iris$Sepal.Length,
x = iris$Species
)
#installing packages
install.packages("ggplot2")
library(ggplot2)
data(iris)
head(iris)
unique(iris$Species)
plot(iris[1:4])
plot(
x = iris$Sepal.Length,
y = iris$Sepal.Width
)
plot(
x = iris$Sepal.Width,
y = iris$Sepal.Length
)
plot(
x = iris$Petal.Length,
y = iris$Petal.Width
)
x <- iris$Petal.Length
y <- iris$Petal.Width
model <- lm(y~x)
summary(model)
lines(
x = iris$Petal.Length,
y = model$fitted,
col = "red",
lwd = 3
)
cor(
x = iris$Petal.Length,
y = iris$Petal.Width
)
summary(model)
predict(
object = model,
newdata = data.frame(x = c(2,5,7))
)
#installing packages
install.packages("ggplot2")
library(ggplot2)
data(iris)
head(iris)
unique(iris$Species)
install.packages("ggplot2")
plot(
x= iris[1:4],
col = as.integer(iris$Species)
)
plot(
x = iris$Sepal.Length,
y = iris$Sepal.Width,
col = as.numeric(iris$Species)
)
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
col = as.numeric(iris$Species)
)
clusters <- kmeans(
x = iris[,1:4],
centers = 3,
nstart = 10
)
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
col = as.numeric(iris$Species),
pch = clusters$cluster
)
points(
x= clusters$centers[,"Petal.Length"],
y = clusters$centers[,"Petal.Width"],
pch = 4,
lwd = 4,
col = "blue"
)
table(
x = clusters$cluster,
y = iris$Species
)
plot(
x= iris[1:4],
col = as.integer(iris$Species)
)
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
col = as.numeric(iris$Species)
)
# create K-Means cluster
clusters <- kmeans(
x = iris[,1:4],
centers = 3,
nstart = 10
)
plot(
x = iris$Petal.Length,
y = iris$Petal.Width,
col = as.numeric(iris$Species),
pch = clusters$cluster
)
points(
x= clusters$centers[,"Petal.Length"],
y = clusters$centers[,"Petal.Width"],
pch = 4,
lwd = 4,
col = "blue"
)
x <- 5
x
x <- 5
x
x <- 5L
x
y <- "Hello"
print(y)
z <- 1:20
z
setwd("C:/Giri/git/datasciencecoursera")
g <- c(0.5,0.7)
g
h <- vector("numeric",length=10)
h
y <- c(TRUE,2)
y
y <- c("c",2)
y
y <- c(TRUE,"a")
y
x <- 0:6
class(x)
as.numeric(x)
as.logical(x)
as.character(x)
x <- c("a","b","c")
as.numeric(x)
x <- list("a",1,TRUE)
x
x <- list("a",1,2,TRUE)
x
